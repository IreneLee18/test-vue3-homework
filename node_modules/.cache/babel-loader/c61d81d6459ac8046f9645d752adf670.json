{"ast":null,"code":"import productModal from '../components/ProductModal.vue';\nimport deleteModal from '../components/DeleteModal.vue';\nimport pagination from '../components/PaginationView.vue';\nexport default {\n  data() {\n    return {\n      products: [],\n      pagination: {},\n      tempProduct: {},\n      isNewProduct: false,\n      isLoading: false\n    };\n  },\n\n  components: {\n    productModal,\n    deleteModal,\n    pagination\n  },\n  inject: ['emitter'],\n  methods: {\n    getProducts(page = 1) {\n      this.isLoading = true;\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products?page=2`;\n      console.log(api);\n      this.$http.get(api).then(res => {\n        if (res.data.success) {\n          this.isLoading = false;\n          console.log(res.data);\n          this.products = res.data.products;\n          this.pagination = res.data.pagination; // console.log(this.products, this.pagination)\n        }\n      }).catch(err => console.log(err.response));\n    },\n\n    // 開啟新增＆編輯\n    openModal(isNewProduct, item) {\n      // console.log(isNewProduct, item)\n      if (isNewProduct) {\n        // 每次都清空資料欄\n        this.tempProduct = {};\n      } else {\n        this.tempProduct = { ...item\n        };\n      }\n\n      this.isNewProduct = isNewProduct;\n      const productModalComponent = this.$refs.showProductModal;\n      productModalComponent.showModal();\n    },\n\n    updateProduct(item) {\n      this.tempProduct = item; // 新增狀態\n\n      let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`;\n      let httpMethod = 'post'; // 編輯狀態\n\n      if (!this.isNewProduct) {\n        api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${item.id}`;\n        httpMethod = 'put';\n      }\n\n      const productModalComponent = this.$refs.showProductModal;\n      this.$http[httpMethod](api, {\n        data: this.tempProduct\n      }).then(res => {\n        console.log(res);\n        productModalComponent.hideModal(); // 製作吐司列表（ 查看回傳成功與否）\n\n        if (res.data.success) {\n          this.getProducts();\n          this.emitter.emit('pushMsg', {\n            style: 'success',\n            title: '更新成功'\n          });\n        } else {\n          this.emitter.emit('pushMsg', {\n            style: 'danger',\n            title: '更新失敗',\n            content: res.data.message.join('、')\n          });\n        }\n      }).catch(err => console.log(err.response));\n    },\n\n    // 開啟刪除\n    openDeleteModal(item) {\n      this.tempProduct = { ...item\n      };\n      const deleteModalComponent = this.$refs.showDeleteModal;\n      deleteModalComponent.showModal();\n      console.log(item);\n    },\n\n    deleteProduct() {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`;\n      this.$http.delete(api, {\n        data: this.tempProduct\n      }).then(res => {\n        console.log(res);\n        const deleteModalComponent = this.$refs.showDeleteModal;\n        deleteModalComponent.hideModal();\n\n        if (res.data.success) {\n          this.getProducts();\n          this.emitter.emit('pushMsg', {\n            style: 'success',\n            title: '刪除成功'\n          });\n        }\n      }).catch(err => console.log(err.response));\n    }\n\n  },\n\n  created() {\n    this.getProducts();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["productModal","deleteModal","pagination","data","products","tempProduct","isNewProduct","isLoading","components","inject","methods","getProducts","page","api","process","env","VUE_APP_API","VUE_APP_PATH","console","log","$http","get","then","res","success","catch","err","response","openModal","item","productModalComponent","$refs","showProductModal","showModal","updateProduct","httpMethod","id","hideModal","emitter","emit","style","title","content","message","join","openDeleteModal","deleteModalComponent","showDeleteModal","deleteProduct","delete","created"],"sourceRoot":"","sources":["/Users/irenelee/Desktop/vue-cli-demo/project/test1/src/views/ProductsView.vue"],"sourcesContent":["<template>\n  <LoadingView :active=\"isLoading\"></LoadingView>\n  <div class=\"text-end\">\n    <button class=\"btn btn-primary\" type=\"button\" @click=\"openModal(true)\">\n      新增產品\n    </button>\n  </div>\n  <table class=\"table mt-4\">\n    <thead>\n      <tr>\n        <th width=\"120\">分類</th>\n        <th>產品名稱</th>\n        <th width=\"120\">原價</th>\n        <th width=\"120\">售價</th>\n        <th width=\"100\">是否啟用</th>\n        <th width=\"200\">編輯</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr v-for=\"item in products\" :key=\"item.id\">\n        <td>{{item.category}}</td>\n        <td>{{item.title}}</td>\n        <td class=\"text-right\">\n          {{item.origin_price}}\n        </td>\n        <td class=\"text-right\">\n          {{item.price}}\n        </td>\n        <td>\n          <span class=\"text-success\" v-if=\"item.is_enabled\">啟用</span>\n          <span class=\"text-muted\" v-else>未啟用</span>\n        </td>\n        <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-outline-primary btn-sm\"\n            @click=\"openModal(false,item)\"\n            >編輯</button>\n            <button class=\"btn btn-outline-danger btn-sm\"\n            @click=\"openDeleteModal(item)\"\n            >刪除</button>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <product-modal ref=\"showProductModal\"\n  :product=\"tempProduct\"\n  @add-product=\"updateProduct\"\n  ></product-modal>\n  <delete-modal ref=\"showDeleteModal\"\n  :product=\"tempProduct\"\n  @delete-product=\"deleteProduct\"\n  ></delete-modal>\n  <pagination></pagination>\n</template>\n\n<script>\nimport productModal from '../components/ProductModal.vue'\nimport deleteModal from '../components/DeleteModal.vue'\nimport pagination from '../components/PaginationView.vue'\nexport default {\n  data () {\n    return {\n      products: [],\n      pagination: {},\n      tempProduct: {},\n      isNewProduct: false,\n      isLoading: false\n    }\n  },\n  components: {\n    productModal,\n    deleteModal,\n    pagination\n  },\n  inject: ['emitter'],\n  methods: {\n    getProducts (page = 1) {\n      this.isLoading = true\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/products?page=2`\n      console.log(api)\n      this.$http.get(api)\n        .then((res) => {\n          if (res.data.success) {\n            this.isLoading = false\n            console.log(res.data)\n            this.products = res.data.products\n            this.pagination = res.data.pagination\n            // console.log(this.products, this.pagination)\n          }\n        })\n        .catch((err) => console.log(err.response))\n    },\n    // 開啟新增＆編輯\n    openModal (isNewProduct, item) {\n      // console.log(isNewProduct, item)\n      if (isNewProduct) {\n        // 每次都清空資料欄\n        this.tempProduct = {}\n      } else {\n        this.tempProduct = { ...item }\n      }\n      this.isNewProduct = isNewProduct\n      const productModalComponent = this.$refs.showProductModal\n      productModalComponent.showModal()\n    },\n    updateProduct (item) {\n      this.tempProduct = item\n\n      // 新增狀態\n      let api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product`\n      let httpMethod = 'post'\n\n      // 編輯狀態\n      if (!this.isNewProduct) {\n        api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${item.id}`\n        httpMethod = 'put'\n      }\n\n      const productModalComponent = this.$refs.showProductModal\n      this.$http[httpMethod](api, { data: this.tempProduct })\n        .then((res) => {\n          console.log(res)\n          productModalComponent.hideModal()\n          // 製作吐司列表（ 查看回傳成功與否）\n          if (res.data.success) {\n            this.getProducts()\n            this.emitter.emit('pushMsg', {\n              style: 'success',\n              title: '更新成功'\n            })\n          } else {\n            this.emitter.emit('pushMsg', {\n              style: 'danger',\n              title: '更新失敗',\n              content: res.data.message.join('、')\n            })\n          }\n        })\n        .catch((err) => console.log(err.response))\n    },\n    // 開啟刪除\n    openDeleteModal (item) {\n      this.tempProduct = { ...item }\n      const deleteModalComponent = this.$refs.showDeleteModal\n      deleteModalComponent.showModal()\n      console.log(item)\n    },\n    deleteProduct () {\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/product/${this.tempProduct.id}`\n      this.$http.delete(api, { data: this.tempProduct })\n        .then((res) => {\n          console.log(res)\n          const deleteModalComponent = this.$refs.showDeleteModal\n          deleteModalComponent.hideModal()\n          if (res.data.success) {\n            this.getProducts()\n            this.emitter.emit('pushMsg', {\n              style: 'success',\n              title: '刪除成功'\n            })\n          }\n        })\n        .catch((err) => console.log(err.response))\n    }\n  },\n  created () {\n    this.getProducts()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}