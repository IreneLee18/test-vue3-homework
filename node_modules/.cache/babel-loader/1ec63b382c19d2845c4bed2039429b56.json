{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal fade\",\n  id: \"staticBackdrop\",\n  \"data-bs-backdrop\": \"static\",\n  \"data-bs-keyboard\": \"false\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"staticBackdropLabel\",\n  \"aria-hidden\": \"true\",\n  ref: \"productModal\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512\n  /* NEED_PATCH */\n  );\n}","map":{"version":3,"mappings":";;EAEIA,KAAK,EAAC;EACNC,EAAE,EAAC;EACH,oBAAiB;EACjB,oBAAiB;EACjBC,QAAQ,EAAC;EACT,mBAAgB;EAChB,eAAY;EACZC,GAAG,EAAC;;;uBARNC,oBAUM,KAVN,cAUM,IAVN,EAUM;EAAA;EAVN","names":["class","id","tabindex","ref","_createElementBlock"],"sourceRoot":"","sources":["/Users/irenelee/Desktop/vue-cli-demo/project/test1/src/components/ProductModal.vue"],"sourcesContent":["<template>\n  <div\n    class=\"modal fade\"\n    id=\"staticBackdrop\"\n    data-bs-backdrop=\"static\"\n    data-bs-keyboard=\"false\"\n    tabindex=\"-1\"\n    aria-labelledby=\"staticBackdropLabel\"\n    aria-hidden=\"true\"\n    ref=\"productModal\"\n  >\n  </div>\n</template>\n\n<script>\nimport Modal from 'bootstrap/js/dist/modal'\nexport default {\n  props: {\n    product: {\n      type: Object,\n      default () { return {} }\n    }\n  },\n  watch: {\n    product () {\n      this.tempProduct = this.product\n    }\n  },\n  data () {\n    return {\n      modal: {},\n      tempProduct: {}\n    }\n  },\n  methods: {\n    showModal () {\n      this.modal.show()\n    },\n    hideModal () {\n      this.modal.hide()\n    },\n    uploadFile () {\n      const uploadedFile = this.$refs.inputFile.files[0]\n      console.dir(uploadedFile)\n      const formData = new FormData()\n      formData.append('file-to-upload', uploadedFile)\n      const api = `${process.env.VUE_APP_API}api/${process.env.VUE_APP_PATH}/admin/upload`\n      this.$http.post(api, formData)\n        .then((res) => {\n          console.log(res)\n          if (res.data.success) {\n            this.tempProduct.imageUrl = res.data.imageUrl\n          }\n        })\n        .catch((err) => console.log(err.response))\n    }\n  },\n  mounted () {\n    this.modal = new Modal(this.$refs.productModal)\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}